{
  "root": true,
  "ignorePatterns": [
    "dist",
    "coverage",
    "junit"
  ],
  "overrides": [
    {
      "files": [
        "*.js"
      ],
      "env": {
        "es2022": true,
        "node": true
      },
      "parserOptions": {
        "sourceType": "module"
      },
      "extends": [
        "eslint:recommended",
        "plugin:jsdoc/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        // jsdoc
        // ------------------------------
        "jsdoc/check-alignment": "error",
        "jsdoc/require-jsdoc": 0,
        // ------------------------------
        // prettier
        // ------------------------------
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto"
          }
        ]
        // ------------------------------
      }
    },
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:jsdoc/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "rules": {
        // eslint
        // ------------------------------
        //
        "curly": "error",
        "dot-notation": "error",
        "eqeqeq": [
          "error",
          "smart"
        ],
        "guard-for-in": "error",
        "id-blacklist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "id-match": "error",
        "max-classes-per-file": [
          "error",
          1
        ],
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "warn",
              "dir",
              "timeLog",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupEnd",
              "table",
              "dirxml",
              "error",
              "groupCollapsed",
              "Console",
              "profile",
              "profileEnd",
              "timeStamp",
              "context"
            ]
          }
        ],
        "no-debugger": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-extra-bind": "error",
        "no-fallthrough": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-return-await": "error",
        // note you must disable the base rule as it can report incorrect errors
        "no-shadow": "off",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        // "no-underscore-dangle": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-finally": "error",
        "no-unused-expressions": "off",
        "no-unused-labels": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "one-var": [
          "error",
          "never"
        ],
        "prefer-const": "error",
        "prefer-object-spread": "error",
        // Prefer @typescript-eslint/quotes
        "quotes": "off",
        "radix": "error",
        "semi": "off",
        "sort-imports": [
          "error",
          {
            "ignoreDeclarationSort": true
          }
        ],
        "space-before-function-paren": "off",
        "spaced-comment": "error",
        "use-isnan": "error",
        // ------------------------------

        // @typescript-eslint
        // ------------------------------
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-unused-expressions": ["error"],
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/unbound-method": ["error", { "ignoreStatic": true }],
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/restrict-template-expressions": "off",
        // ------------------------------

        // jsdoc
        // ------------------------------
        "jsdoc/check-alignment": "error",
        "jsdoc/require-jsdoc": 0,
        "jsdoc/check-values": 0,
        "jsdoc/require-param-type": 0,
        "jsdoc/require-returns": 0,
        // ------------------------------

        // prettier
        // ------------------------------
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto"
          }
        ],
        // ------------------------------

        // @angular-eslint
        // ------------------------------
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ]
        // ------------------------------
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    },
    {
      "files": [
        "*.html"
      ],
      "excludedFiles": [
        "*inline-template-*.component.html"
      ],
      "extends": [
        "plugin:prettier/recommended"
      ],
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "parser": "angular"
          }
        ]
      }
    }
  ]
}
